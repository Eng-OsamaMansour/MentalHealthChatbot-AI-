{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osama\\\\Documents\\\\GitHub\\\\emocare-chatbot\\\\src\\\\components\\\\AuthForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '../assets/styles/auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = ({\n  title,\n  buttonText,\n  onSubmit,\n  linkText,\n  linkTo,\n  linkAction\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!email.includes(\"@\") || password.length < 6) {\n      setError(\"Invalid email or password (min 6 characters)\");\n      return;\n    }\n    setError(\"\");\n    onSubmit(email, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth-h2\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"auth-input\",\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"auth-input\",\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"auth-button\",\n          type: \"submit\",\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-p\",\n        children: [linkText, \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: linkTo,\n          children: linkAction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"/oUdbphBttpIcUsa7P1v1069QkA=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthForm","title","buttonText","onSubmit","linkText","linkTo","linkAction","_s","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","includes","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["C:/Users/osama/Documents/GitHub/emocare-chatbot/src/components/AuthForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport '../assets/styles/auth.css';\r\n\r\nconst AuthForm = ({ title, buttonText, onSubmit, linkText, linkTo, linkAction }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!email.includes(\"@\") || password.length < 6) {\r\n      setError(\"Invalid email or password (min 6 characters)\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    onSubmit(email, password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-box\">\r\n        <h2 className=\"auth-h2\">{title}</h2>\r\n        <form onSubmit={handleSubmit} className=\"auth-form\">\r\n          <input\r\n            className=\"auth-input\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            className=\"auth-input\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          {error && <p className=\"error-message\">{error}</p>}\r\n          <button className=\"auth-button\" type=\"submit\">{buttonText}</button>\r\n        </form>\r\n        <p  className=\"auth-p\"\r\n        >\r\n          {linkText} <a href={linkTo}>{linkAction}</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}